# Define a server for the api, fulfilled by the backend service running on port 8000
upstream api {
    server backend:8000;
}

# Define a server for the admin site (currently just using the same container / port as the api)
upstream admin_site {
    server backend:8000;
}

# Define the server for the frontend
server {
    # docker-compose forwards browser requests to port 8080, so listen there
    listen 8080;

    location / {
        # Map where requests are made relative to the domain name (i.e. the URL)
        # to the location in our nginx server that should handle the request.
        # docker-compose puts the frontend app here.
        root /var/www/frontend;
    }

    location /rest-api/ {
        # Proxying with nginx requires two http header fields - host & header:
        # these will be set on the http requests forwarded to the server.

        # Proxy requests made at /rest-api/ to the upstream backend server
        proxy_pass http://api;
        proxy_set_header Host $http_host;
    }

    location /admin/ {
        # Proxy requests made at /admin/ to the upstream backend server
        proxy_pass http://admin_site;
        proxy_set_header Host $http_host;
    }

    location /static/ {
        # Serve static files from the relevant root directory.
        root /var/www/admin_site_statics/;
    }
}
